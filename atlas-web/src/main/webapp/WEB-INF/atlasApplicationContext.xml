<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

    <!-- Spring config for Atlas -->

    <!-- Loader component -->

    <bean name="atlasLoader" class="uk.ac.ebi.gxa.loader.AtlasMAGETABLoader">
        <!-- datasource bean, from JNDI -->
        <property name="dataSource" ref="atlasDataSource" />
    </bean>

    <!-- Index Builder component -->

    <bean name="indexBuilder" class="uk.ac.ebi.gxa.index.builder.DefaultIndexBuilder">
        <!-- datasource bean, from JNDI -->
        <property name="atlasDAO" ref="atlasDAO" />
        <property name="indexLocation" ref="atlasIndex" />
        <!-- configures behaviour of indexBuilder, whether we want genes and experiments -->
        <property name="includeGenes" value="true" />
        <property name="includeExperiments" value="true" />
    </bean>

    <!-- NetCDF Generator component -->

    <bean name="netCDFGenerator" class="uk.ac.ebi.gxa.netcdf.generator.DefaultNetCDFGenerator">
        <!-- datasource bean, from JNDI -->
        <property name="atlasDAO" ref="atlasDAO" />
        <property name="repositoryLocation" ref="atlasNetCDFRepo" />
    </bean>

    <!-- Interface component -->

    <!-- interface search service, uses both DB and index to acquire results -->
    <bean name="atlasSearchService" class="uk.ac.ebi.gxa.web.AtlasSearchService">
        <property name="atlasIndex" ref="atlasIndex" />
        <property name="atlasDatabaseDAO" ref="atlasDAO" />
        <property name="atlasStatisticsService" ref="atlasStatisticsService" />
        <property name="atlasComputeService" ref="atlasComputeService" />
        <property name="atlasDownloadService" ref="atlasDownloadService" />
        <!-- fixme: do SOLR server injection, which would allow injection of query service here -->
        <!--<property name="atlasQueryService" ref="atlasQueryService" />-->
    </bean>
    <!-- interface statistics service -->
    <bean name="atlasStatisticsService" class="ae3.service.AtlasStatisticsService">
        <property name="atlasDAO" ref="atlasDAO" />
        <!-- todo - we can wire up the solr server here too -->
    </bean>
    <!-- interface compute service -->
    <bean name="atlasComputeService" class="ae3.service.compute.AtlasComputeService" />
    <!-- interface download service -->
    <bean name="atlasDownloadService" class="ae3.service.AtlasDownloadService">
        <!-- fixme: do SOLR server injection, which would allow injection of query service here -->
        <!--<property name="atlasQueryService" ref="atlasQueryService" />-->
    </bean>
    <!-- interface plotter -->
    <bean name="plotter" class="ae3.service.AtlasPlotter">
        <property name="atlasSearchService" ref="atlasSearchService" />
    </bean>

    <!-- Web service component -->
    <bean name="atlasWebService" class="ae3.service.webservices.AtlasWebServiceImpl">
        <property name="atlasSearchService" ref="atlasSearchService" />
    </bean>

    <!-- Other required configuration -->

    <!-- Spring JDBC template for database queries -->
    <bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- datasource bean, from JNDI -->
        <property name="dataSource" ref="atlasDataSource" />
    </bean>

    <!-- Configure AtlasDAO for this datasource -->
    <bean name="atlasDAO" class="uk.ac.ebi.microarray.atlas.dao.AtlasDAO">
        <property name="jdbcTemplate" ref="template" />
    </bean>

    <!-- Configuration for JNDI resource lookup -->
    <jee:jndi-lookup id="atlasDataSource"
                     jndi-name="/jdbc/ATLAS1"
                     resource-ref="true" />

    <jee:jndi-lookup id="atlasDataSource2"
                     jndi-name="/jdbc/ATLAS2"
                     resource-ref="true" />

    <jee:jndi-lookup id="atlasDataSourceDev"
                     jndi-name="/jdbc/ATLASDEV"
                     resource-ref="true" />

    <jee:jndi-lookup id="atlasIndex"
                     jndi-name="/file/GXAINDEX"
                     resource-ref="true" />

    <jee:jndi-lookup id="atlasNetCDFRepo"
                     jndi-name="/file/GXANETCDFS"
                     resource-ref="true" />

</beans>