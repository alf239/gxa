<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Spring config for Atlas -->

    <!-- Loader component -->

    <bean name="atlasLoader" class="uk.ac.ebi.gxa.loader.DefaultAtlasLoader">
        <!-- DAO for data access, ready-to-use -->
        <property name="atlasDAO" ref="atlasLoaderDAO"/>
        <property name="missingDesignElementsCutoff" value="0.25"/>
        <property name="allowReloading" value="true"/>
    </bean>

    <!-- Index Builder component -->

    <bean name="indexBuilder" class="uk.ac.ebi.gxa.index.builder.DefaultIndexBuilder">
        <!-- DAO for data access, ready-to-use -->
        <property name="atlasDAO" ref="atlasLoaderDAO"/>
        <!-- location of SOLR index, local filesystem directory -->
        <property name="indexLocation" ref="atlasIndex"/>
        <!-- configures behaviour of indexBuilder, whether we want genes and experiments -->
        <property name="includeIndices">
            <util:list>
                <value>properties</value>
                <value>experiments</value>
                <value>genes</value>
            </util:list>
        </property>
    </bean>

    <!-- NetCDF Generator component -->

    <bean name="netCDFGenerator" class="uk.ac.ebi.gxa.netcdf.generator.DefaultNetCDFGenerator">
        <!-- DAO for data access, ready-to-use -->
        <property name="atlasDAO" ref="atlasLoaderDAO"/>
        <!-- repository of NetCDFs, local filesystem directory -->
        <property name="repositoryLocation" ref="atlasNetCDFRepo"/>
    </bean>

    <!-- Analytics Generator component -->

    <bean name="analyticsGenerator" class="uk.ac.ebi.gxa.analytics.generator.DefaultAnalyticsGenerator">
        <!-- DAO for data access, ready-to-use -->
        <property name="atlasDAO" ref="atlasLoaderDAO"/>
        <!-- repository of NetCDFs, local filesystem directory -->
        <property name="repositoryLocation" ref="atlasNetCDFRepo"/>
        <!-- atlasRFactory provides access to RServices independent of environment -->
        <property name="atlasComputeService" ref="atlasComputeService"/>
    </bean>

    <!-- Web interface component -->

    <bean id="solrContainerFactory" class="ae3.dao.SolrContainerFactory">
        <property name="atlasIndex" ref="atlasIndex" />
    </bean>

    <bean name="solrContainer" factory-bean="solrContainerFactory" factory-method="createContainer" />

    <bean name="solrServerAtlas" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer">
        <constructor-arg ref="solrContainer" />
        <constructor-arg value="atlas" />
    </bean>

    <bean name="solrServerExpt" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer">
        <constructor-arg ref="solrContainer" />
        <constructor-arg value="expt" />
    </bean>

    <bean name="solrServerProp" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer">
        <constructor-arg ref="solrContainer" />
        <constructor-arg value="properties" />
    </bean>

    <bean name="atlasSolrDAO" class="ae3.dao.AtlasDao">
        <property name="solrServerAtlas" ref="solrServerAtlas" />
        <property name="solrServerExpt" ref="solrServerExpt" />
    </bean>

    <bean name="atlasEfvService" class="ae3.service.structuredquery.AtlasEfvService">
        <property name="solrServerAtlas" ref="solrServerAtlas" />
        <property name="solrServerExpt" ref="solrServerExpt" />
        <property name="solrServerProp" ref="solrServerProp" />
    </bean>

    <bean name="atlasEfoService" class="ae3.service.structuredquery.AtlasEfoService">
        <property name="solrServerAtlas" ref="solrServerAtlas" />
    </bean>

    <bean name="atlasGenePropertyService" class="ae3.service.structuredquery.AtlasGenePropertyService">
        <property name="solrServerAtlas" ref="solrServerAtlas" />
    </bean>

    <bean name="atlasQueryService" class="ae3.service.structuredquery.AtlasStructuredQueryService">
        <property name="solrServerAtlas" ref="solrServerAtlas" />
        <property name="solrServerExpt" ref="solrServerExpt" />
        <property name="solrServerProp" ref="solrServerProp" />
        <property name="atlasSolrDAO" ref="atlasSolrDAO" />
        <property name="efoService" ref="atlasEfoService" />
        <property name="efvService" ref="atlasEfvService" />

        <!-- hack: it doesn't need to know about core container,
                   but it uses it to close searcher and clean cache to prevent OOMs -->
        <property name="coreContainer" ref="solrContainer" />
    </bean>

    <!-- interface compute service -->
    <bean name="atlasComputeService" class="uk.ac.ebi.gxa.analytics.compute.AtlasComputeService">
        <property name="atlasRFactory" ref="atlasRFactory"/>
    </bean>
    <!-- interface download service -->
    <bean name="atlasDownloadService" class="ae3.service.AtlasDownloadService">
        <property name="atlasQueryService" ref="atlasQueryService" />
    </bean>
    <!-- interface plotter -->
    <bean name="atlasPlotter" class="uk.ac.ebi.gxa.web.AtlasPlotter">
        <property name="atlasDatabaseDAO" ref="atlasInterfaceDAO"/>
        <property name="atlasSolrDAO" ref="atlasSolrDAO"/>
        <property name="atlasNetCDFRepo" ref="atlasNetCDFRepo"/>
    </bean>

    <!-- Required spring driven data access configuration for web interface -->

    <!-- Spring JDBC template for database queries -->
    <bean name="interfaceTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- datasource bean, from JNDI -->
        <property name="dataSource" ref="atlasDataSource"/>
        <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
    </bean>

    <!-- Configure AtlasDAO for this datasource -->
    <bean name="atlasInterfaceDAO" class="uk.ac.ebi.microarray.atlas.dao.AtlasDAO">
        <property name="jdbcTemplate" ref="interfaceTemplate"/>
    </bean>

    <!-- Required spring driven data access configuration for loader components -->

    <!-- Spring JDBC template for database queries -->
    <bean name="loaderTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- datasource bean, from JNDI -->
        <property name="dataSource" ref="atlasDataSource2"/>
        <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
    </bean>

    <!-- Configure AtlasDAO for this datasource -->
    <bean name="atlasLoaderDAO" class="uk.ac.ebi.microarray.atlas.dao.AtlasDAO">
        <property name="jdbcTemplate" ref="loaderTemplate"/>
    </bean>

    <!-- Common spring-drive data access configuration -->
    <!-- native extractor for fetching oracle connections from pool wrapper etc -->
    <bean name="nativeJdbcExtractor"
          class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"/>

    <!--Configure R workbench -->
    <!-- note that no-arg factory method reads R.properties from classpath, and possibly biocep.properties too -->
    <bean name="atlasRFactory" factory-bean="atlasRFactoryBuilder" factory-method="buildAtlasRFactory"/>

    <bean name="atlasRFactoryBuilder"
          class="uk.ac.ebi.gxa.R.AtlasRFactoryBuilder"
          factory-method="getAtlasRFactoryBuilder"/>

    <!-- Configuration for JNDI resource lookup -->
    <jee:jndi-lookup id="atlasDataSource"
                     jndi-name="/jdbc/ATLAS1"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasDataSource2"
                     jndi-name="/jdbc/ATLAS2"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasDataSourceDev"
                     jndi-name="/jdbc/ATLASDEV"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasIndex"
                     jndi-name="/file/GXAINDEX"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasNetCDFRepo"
                     jndi-name="/file/GXANETCDFS"
                     resource-ref="true"/>

</beans>